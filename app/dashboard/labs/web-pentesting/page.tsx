"use client"

import { motion } from 'framer-motion';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Terminal, ArrowRight } from 'lucide-react';
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";

export default function WebPentestingLabPage() {
  const machines = [
    { 
      name: "XSS Playground", 
      difficulty: "Easy", 
      points: 25,
      completionRate: "48%",
      os: "Linux",
      ip: "10.10.10.7",
      status: "active",
      description: "Practice various XSS attack vectors and bypass common filters"
    },
    { 
      name: "SQL Injection", 
      difficulty: "Medium", 
      points: 35,
      completionRate: "35%",
      os: "Windows",
      ip: "10.10.10.8",
      status: "active",
      description: "Exploit SQL injection vulnerabilities to bypass authentication"
    },
    { 
      name: "Authentication Bypass", 
      difficulty: "Hard", 
      points: 45,
      completionRate: "18%",
      os: "Linux",
      ip: "10.10.10.9",
      status: "active",
      description: "Find and exploit authentication vulnerabilities"
    },
    { 
      name: "File Upload", 
      difficulty: "Medium", 
      points: 35,
      completionRate: "28%",
      os: "Linux",
      ip: "10.10.10.10",
      status: "active",
      description: "Bypass file upload restrictions and achieve remote code execution"
    },
    { 
      name: "SSRF Lab", 
      difficulty: "Hard", 
      points: 45,
      completionRate: "15%",
      os: "Linux",
      ip: "10.10.10.11",
      status: "active",
      description: "Exploit Server-Side Request Forgery vulnerabilities"
    },
    { 
      name: "JWT Tokens", 
      difficulty: "Medium", 
      points: 35,
      completionRate: "25%",
      os: "Linux",
      ip: "10.10.10.12",
      status: "active",
      description: "Manipulate and exploit JWT token vulnerabilities"
    }
  ];

  return (
    <div className="space-y-8">
      <div className="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
        <div>
          <h1 className="text-3xl font-bold">Web Pentesting Lab</h1>
          <p className="text-muted-foreground">Exploit web vulnerabilities in realistic scenarios</p>
        </div>
      </div>

      <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        {machines.map((machine, index) => (
          <motion.div
            key={index}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.1 }}
          >
            <div className="relative group">
              <div className="absolute -inset-0.5 bg-gradient-to-r from-purple-600/50 to-blue-600/50 rounded-lg blur opacity-75 group-hover:opacity-100 transition duration-1000"></div>
              <Card className="relative bg-background border-border">
                <CardHeader>
                  <div className="flex items-center justify-between mb-2">
                    <h3 className="text-xl font-bold">{machine.name}</h3>
                    <Badge 
                      className={
                        machine.difficulty === "Easy" ? "bg-green-500/10 text-green-400 border-green-500/20" :
                        machine.difficulty === "Medium" ? "bg-yellow-500/10 text-yellow-400 border-yellow-500/20" :
                        "bg-red-500/10 text-red-400 border-red-500/20"
                      }
                    >
                      {machine.difficulty}
                    </Badge>
                  </div>
                  <p className="text-muted-foreground text-sm">{machine.description}</p>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="flex items-center justify-between text-sm text-muted-foreground">
                      <div className="flex items-center space-x-2">
                        <span>{machine.os}</span>
                        <span>â€¢</span>
                        <span>{machine.points} points</span>
                      </div>
                      <span>{machine.ip}</span>
                    </div>
                    <div className="space-y-2">
                      <div className="flex justify-between text-sm">
                        <span className="text-muted-foreground">Completion Rate</span>
                        <span>{machine.completionRate}</span>
                      </div>
                      <Progress value={parseInt(machine.completionRate)} className="h-1" />
                    </div>
                    <Button 
                      className="w-full bg-gradient-to-r from-purple-600 to-blue-500 hover:from-purple-700 hover:to-blue-600"
                    >
                      Start Machine <ArrowRight className="ml-2 h-4 w-4" />
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>
          </motion.div>
        ))}
      </div>
    </div>
  );
}